<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAIACHAwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAwAAAAMAgGAAAAVwL5hwAAAARz
        QklUCAgICHwIZIgAAAM+SURBVGiB7VlNaBNBGH2V1IrkYMCABWkO0lChP6ChgYDBEg9GAu1BCFYoFHqo
        uShCqSAScpJehF5iD0JBSSVQQSEYD7ZIwEAkCq2X0NBDghAxQkULiinUw+cw2U233Z3ZuBT3XXZnmMy8
        N983M28nHYE7u7s4xDhiNQFZ2AKshi3AatgCrMb/I+DpbWBhup1UCLEw8PY+4Pfqa69bwNFOYMADRHyi
        1PRhdJie58/oa284ha4G+HvER5ERxcI0MDPGy/Eo4DxmrA/DAnq7lVHocQPzU0Z7oVQZ8ADHu6js9wIj
        /cD2L2P9GBLw+RsNwKKQKQLlGjDk0Z+zDKFB6iuRpvJ4EOh0APmSsX4MRyBfoijEwlR++IqeNy7r7yMe
        BU6dAF68o7LfS5PwsQLUvxvjY1hAIk0zFxqkcmEDWKu0ptZ+CPRRNJNZKjPxi6tG2QieA/kSzSCLwlKO
        RE2GDv7t/BQt1OcFKkd8JH6tQpNhFEICEmlga1sZBbWovcBSpVwDnryhuutBEr+UE2EicRK//KAknEhT
        WrB9fC+wVGHrJhamXSxfEpt9QEJAMkuEr5zjdSvrlB7xaGv7vVJFvROJQMoLrawDLicnnMwC1Trt5+pt
        dTKkTJWZMeVOJAopASwKgT5el8rRfj4e5HWxMJFtTpVLQ8qdSBTSblSdNpkiUNwEuhy8zegwkWWpwizD
        yrrs6IDj4Cb7I5kFLpxVRuHmI/7OyDYfWiP9tBPJzj4gEYHMXW7EUjkiOTehbMPIVuucLLMMy3ne7tms
        uMsVFuByAqdP0jvzRP5e5eJlZFN/F26zZcgUqY6tjx73PxagxnJeuXgjvlayMpZBC6YJUDtT5lgZWVnL
        oAVTv4lZFG5FiGyhzMnKWgYtmCogU6SU6XET2dnHVG+GZdCC6bcSi6tAYwd4vcbrzLAMWpA+B9QobAAX
        7/Ey+3hJmZw6DG2/F1J/vJiNtgqYmzDPMmihbQL8XjrYzLIMWmibgMIGUNtSWoZ2wPRF3IxrDw5uw8xg
        tS42huWXuxEf0O0ibyUC3RH43QC+NN3ZNHaAT1/FBm2G+h7ox0/q+/2mvt932H+zWgxbgNWwBVgNW4DV
        OPQC/gCItQ/A5LwvswAAAABJRU5ErkJggg==
</value>
  </data>
</root>